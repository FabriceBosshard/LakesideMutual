trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3701844b-495a-4591-94f4-1efe605564d2'
  imageRepositoryCore: 'customercore'
  imageRepositoryBackend: 'customerbackend'
  imageRepositoryFrontend: 'customerfrontend'
  containerRegistry: 'lakesideapp.azurecr.io'
  dockerfilePathCore: '$(Build.SourcesDirectory)/customer-core/Dockerfile'
  dockerfilePathBackend: '$(Build.SourcesDirectory)/customer-management-backend/Dockerfile'
  dockerfilePathFrontend: '$(Build.SourcesDirectory)/customer-management-frontend/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryCore)
        dockerfile: $(dockerfilePathCore)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryBackend)
        dockerfile: $(dockerfilePathBackend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryFrontend)
        dockerfile: $(dockerfilePathFrontend)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
